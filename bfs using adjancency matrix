#include<iostream>
#include<bits/stdc++.h>
using namespace std;


void bfs(int** adjacency,int n,int start,int visited[])
{
    queue<int> q;
    visited[start]=1;
    int i;
    q.push(start);
    while(!q.empty())
    {
        int curr=q.front();
        cout<<curr<<" ";
        q.pop();
        for(i=0;i<n;i++)
        {
            if(adjacency[curr][i]==1)
            {
                if(visited[i])
                {
                    continue;
                }
                visited[i]=1;
                q.push(i);
            }
        }
    }
}


int main()
{
    int n,e;
    cin>>n>>e;
    int i,j;
    int** adjacency=new int*[n];
    for(i=0;i<n;i++)
    {
        adjacency[i]=new int[n];
        for(j=0;j<n;j++)
        adjacency[i][j]=0;
    }
    
    for(i=0;i<e;i++)
    {
        int f,s;
        cin>>f>>s;
        adjacency[f][s]=1;
        adjacency[s][f]=1;
    }
    
    int *visited;
    visited=(int*)malloc(n*sizeof(int));
    
    for(i=0;i<n;i++)
    visited[i]=0;
    
    bfs(adjacency,n,0,visited);
}
